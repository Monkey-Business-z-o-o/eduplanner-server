name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Sprawdzenie kodu
      - name: Checkout code
        uses: actions/checkout@v3

      # Ustawienie zmiennych środowiskowych
      - name: Set environment variables
        run: |
          echo "DB_DATA_VOLUME=/srv/test/db_data" >> $GITHUB_ENV
          echo "SPRING_PROFILES_ACTIVE=test" >> $GITHUB_ENV
          echo "POSTGRES_USER=test_user" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=test_password" >> $GITHUB_ENV
          echo "POSTGRES_DB=testdb" >> $GITHUB_ENV

      # Weryfikacja zmiennych środowiskowych (debugowanie)
      - name: Debug environment variables
        run: printenv | grep -E "DB_DATA_VOLUME|SPRING_PROFILES_ACTIVE|POSTGRES_"

      # Instalacja Docker Compose Plugin
      - name: Install Docker Compose Plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin

      # Debugowanie wersji Dockera i Compose
      - name: Verify Docker and Compose version
        run: |
          docker --version
          docker compose version

      # Uruchomienie usług Docker Compose
      - name: Start services with Docker Compose
        run: docker compose -f ./eduplanner-server/docker-compose.yml up -d

      # Debugowanie: lista kontenerów Docker
      - name: List running Docker containers
        run: docker ps -a

      # Oczekiwanie na gotowość bazy danych
      - name: Wait for Database to be Ready
        run: |
          for i in {1..10}; do
            docker exec eduplanner-database pg_isready -U test_user && break
            sleep 5
          done

      # Ustawienie JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Nadanie uprawnień do Gradle Wrapper
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      # Uruchomienie testów
      - name: Run tests
        run: ./gradlew test

      # Zatrzymanie usług po zakończeniu
      - name: Stop and remove services
        if: always()
        run: docker compose -f ./eduplanner-server/docker-compose.yml down
