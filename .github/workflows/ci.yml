name: CI Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "DB_DATA_VOLUME=/srv/test/db_data" >> $GITHUB_ENV
          echo "SPRING_PROFILES_ACTIVE=test" >> $GITHUB_ENV
          echo "POSTGRES_USER=root" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=root123" >> $GITHUB_ENV
          echo "POSTGRES_DB=eduplanner" >> $GITHUB_ENV

      - name: Print environment variables
        run: printenv | grep -E "DB_DATA_VOLUME|SPRING_PROFILES_ACTIVE|POSTGRES_"

      - name: Verify environment variables
        run: |
          if [ "$SPRING_PROFILES_ACTIVE" != "test" ]; then
            echo "SPRING_PROFILES_ACTIVE is not 'test'." && exit 1
          fi
          if [ "$POSTGRES_USER" != "root" ]; then
            echo "POSTGRES_USER is not 'root'." && exit 1
          fi
          if [ "$POSTGRES_PASSWORD" != "root123" ]; then
            echo "POSTGRES_PASSWORD is not 'root123'." && exit 1
          fi
          if [ "$POSTGRES_DB" != "eduplanner" ]; then
            echo "POSTGRES_DB is not 'eduplanner'." && exit 1
          fi
          echo "All environment variables are set correctly."

      - name: Install Docker Compose
        run: |
          curl -SL https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Verify Docker and Compose version
        run: |
          docker --version
          docker-compose --version

      - name: Debug build context
        run: ls -lR ../eduplanner-server

      - name: Show Dockerfile
        run: cat ../eduplanner-server/Dockerfile

      - name: Build without cache
        run: docker-compose -f ./docker-compose.yml build --no-cache

      - name: Start services with Docker Compose
        run: docker-compose -f ./docker-compose.yml up -d

      - name: Configure pg_hba.conf
        run: |
          docker exec eduplanner-database bash -c "
          echo 'local   all             all                                     trust' > /var/lib/postgresql/data/pg_hba.conf &&
          echo 'host    all             all             0.0.0.0/0               md5' >> /var/lib/postgresql/data/pg_hba.conf &&
          cat /var/lib/postgresql/data/pg_hba.conf
          "

      - name: Restart PostgreSQL
        run: docker exec eduplanner-database pg_ctl reload

      - name: Wait for Database to be Ready
        run: |
          for i in {1..10}; do
            docker exec eduplanner-database pg_isready -U $POSTGRES_USER && break
            sleep 5
          done

      - name: Inspect initdb directory
        run: docker exec eduplanner-database ls -l /docker-entrypoint-initdb.d

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Fetch Backend Logs
        if: failure()
        run: docker logs eduplanner-backend || true

      - name: Fetch Database Logs
        if: failure()
        run: docker logs eduplanner-database || true

      - name: Inspect initdb directory if fail
        if: failure()
        run: |
          docker exec eduplanner-database ls -l /docker-entrypoint-initdb.d || true

      - name: Stop and remove services
        if: always()
        run: docker-compose -f ./docker-compose.yml down
