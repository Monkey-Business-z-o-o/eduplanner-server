plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.graalvm.buildtools.native' version '0.10.3'
}

group = 'pl.edu.pjwstk'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('timefoldSolverVersion', "1.15.0")
}

def timefoldVersion = "1.15.0"

dependencies {
	// PostgreSQL Driver
	implementation 'org.postgresql:postgresql:42.7.2'

	// Jackson for JSON processing
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// Spring Boot dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.data:spring-data-rest-webmvc'
	implementation 'ai.timefold.solver:timefold-solver-spring-boot-starter'

	// Swagger UI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Timefold Solver dependencies
	implementation platform("ai.timefold.solver:timefold-solver-bom:${timefoldVersion}")

	// Testing dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'ai.timefold.solver:timefold-solver-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.awaitility:awaitility'
	testImplementation 'org.assertj:assertj-core:3.26.3'

	// Runtime dependencies for web UI
	runtimeOnly 'ai.timefold.solver:timefold-solver-webui'
	runtimeOnly 'org.webjars:bootstrap:5.2.3'
	runtimeOnly 'org.webjars:jquery:3.6.4'
	runtimeOnly 'org.webjars:font-awesome:5.15.1'
	runtimeOnly 'org.webjars.npm:js-joda:1.11.0'
}

dependencyManagement {
	imports {
		mavenBom "ai.timefold.solver:timefold-solver-bom:${timefoldSolverVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('build') {
	doFirst {
		println "Starting build for project ${project.name}"
	}
	doLast {
		println "Build completed for project ${project.name}"
	}
}
