package pl.edu.pjwstk.EduPlanner.rest;

import ai.timefold.solver.spring.boot.autoconfigure.TimefoldSolverAotFactory__TestContext003_BeanDefinitions;
import ai.timefold.solver.spring.boot.autoconfigure.TimefoldSolverBeanFactory__TestContext003_BeanDefinitions;
import ai.timefold.solver.spring.boot.autoconfigure.config.TimefoldProperties__TestContext003_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocConfiguration__TestContext003_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocDataRestConfiguration__TestContext003_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocHateoasConfiguration__TestContext003_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocPageableConfiguration__TestContext003_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocSortConfiguration__TestContext003_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocUIConfiguration__TestContext003_BeanDefinitions;
import org.springdoc.core.properties.SpringDocConfigProperties__TestContext003_BeanDefinitions;
import org.springdoc.core.properties.SwaggerUiConfigParameters__TestContext003_BeanDefinitions;
import org.springdoc.core.properties.SwaggerUiConfigProperties__TestContext003_BeanDefinitions;
import org.springdoc.core.properties.SwaggerUiOAuthProperties__TestContext003_BeanDefinitions;
import org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration__TestContext003_BeanDefinitions;
import org.springdoc.webmvc.ui.SwaggerConfig__TestContext003_BeanDefinitions;
import org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator__TestContext003_BeanDefinitions;
import org.springframework.aot.generate.Generated;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.aop.AopAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.codec.CodecProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.hateoas.HateoasProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.ReactorProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.ServerProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.WebProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration__TestContext003_BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__TestContext003_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__TestContext003_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__TestContext003_BeanDefinitions;
import org.springframework.boot.jackson.JsonMixinModuleEntries__TestContext003_BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__TestContext003_BeanDefinitions;
import org.springframework.boot.test.mock.mockito.MockitoPostProcessor__TestContext003_BeanDefinitions;
import org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer__TestContext003_BeanDefinitions;
import org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer__TestContext003_BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__TestContext003_BeanDefinitions;
import org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor__TestContext003_BeanDefinitions;
import org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor__TestContext003_BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__TestContext003_BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__TestContext003_BeanDefinitions;
import org.springframework.data.jpa.mapping.JpaMetamodelMappingContext__TestContext003_BeanDefinitions;
import org.springframework.data.jpa.repository.support.DefaultJpaContext__TestContext003_BeanDefinitions;
import org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor__TestContext003_BeanDefinitions;
import org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension__TestContext003_BeanDefinitions;
import org.springframework.data.jpa.util.JpaMetamodelCacheCleanup__TestContext003_BeanDefinitions;
import org.springframework.data.repository.core.support.PropertiesBasedNamedQueries__TestContext003_BeanDefinitions;
import org.springframework.data.repository.core.support.RepositoryComposition__TestContext003_BeanDefinitions;
import org.springframework.data.rest.webmvc.RestControllerConfiguration__TestContext003_BeanDefinitions;
import org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions;
import org.springframework.data.web.config.SpringDataJacksonConfiguration__TestContext003_BeanDefinitions;
import org.springframework.hateoas.config.HateoasConfiguration__TestContext003_BeanDefinitions;
import org.springframework.hateoas.config.RestTemplateHateoasConfiguration__TestContext003_BeanDefinitions;
import org.springframework.hateoas.config.WebClientHateoasConfiguration__TestContext003_BeanDefinitions;
import org.springframework.hateoas.config.WebFluxHateoasConfiguration__TestContext003_BeanDefinitions;
import org.springframework.hateoas.config.WebMvcEntityLinksConfiguration__TestContext003_BeanDefinitions;
import org.springframework.hateoas.config.WebMvcHateoasConfiguration__TestContext003_BeanDefinitions;
import org.springframework.hateoas.config.WebTestHateoasConfiguration__TestContext003_BeanDefinitions;
import org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration__TestContext003_BeanDefinitions;
import org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration__TestContext003_BeanDefinitions;
import org.springframework.orm.jpa.SharedEntityManagerCreator__TestContext003_BeanDefinitions;
import org.springframework.plugin.core.OrderAwarePluginRegistry__TestContext003_BeanDefinitions;
import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration__TestContext003_BeanDefinitions;
import org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration__TestContext003_BeanDefinitions;
import pl.edu.pjwstk.EduPlanner.EduPlannerApplication__TestContext003_BeanDefinitions;
import pl.edu.pjwstk.EduPlanner.config.RestConfiguration__TestContext003_BeanDefinitions;
import pl.edu.pjwstk.EduPlanner.repository.LessonRepository__TestContext003_BeanDefinitions;
import pl.edu.pjwstk.EduPlanner.repository.RoomRepository__TestContext003_BeanDefinitions;
import pl.edu.pjwstk.EduPlanner.repository.TimeslotRepository__TestContext003_BeanDefinitions;
import pl.edu.pjwstk.EduPlanner.rest.exception.TimetableSolverExceptionHandler__TestContext003_BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
@Generated
public class TimetableEnvironmentTest__TestContext003_BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__TestContext003_BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__TestContext003_BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor", MockitoPostProcessor__TestContext003_BeanDefinitions.SpyPostProcessor.getSpyPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor", MockitoPostProcessor__TestContext003_BeanDefinitions.getMockitoPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer$TestRestTemplateRegistrar", TestRestTemplateContextCustomizer__TestContext003_BeanDefinitions.TestRestTemplateRegistrar.getTestRestTemplateRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer$WebTestClientRegistrar", WebTestClientContextCustomizer__TestContext003_BeanDefinitions.WebTestClientRegistrar.getWebTestClientRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("eduPlannerApplication", EduPlannerApplication__TestContext003_BeanDefinitions.getEduPlannerApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("restConfiguration", RestConfiguration__TestContext003_BeanDefinitions.getRestConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("timetableController", TimetableController__TestContext003_BeanDefinitions.getTimetableControllerBeanDefinition());
    beanFactory.registerBeanDefinition("timetableDemoController", TimetableDemoController__TestContext003_BeanDefinitions.getTimetableDemoControllerBeanDefinition());
    beanFactory.registerBeanDefinition("timetableSolverExceptionHandler", TimetableSolverExceptionHandler__TestContext003_BeanDefinitions.getTimetableSolverExceptionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__TestContext003_BeanDefinitions.BasePackages.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__TestContext003_BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__TestContext003_BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration", SslAutoConfiguration__TestContext003_BeanDefinitions.getSslAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("fileWatcher", SslAutoConfiguration__TestContext003_BeanDefinitions.getFileWatcherBeanDefinition());
    beanFactory.registerBeanDefinition("sslPropertiesSslBundleRegistrar", SslAutoConfiguration__TestContext003_BeanDefinitions.getSslPropertiesSslBundleRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("sslBundleRegistry", SslAutoConfiguration__TestContext003_BeanDefinitions.getSslBundleRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__TestContext003_BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__TestContext003_BeanDefinitions.ConfigurationPropertiesBinderFactory.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__TestContext003_BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__TestContext003_BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties", SslProperties__TestContext003_BeanDefinitions.getSslPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration", WebSocketServletAutoConfiguration__TestContext003_BeanDefinitions.TomcatWebSocketConfiguration.getTomcatWebSocketConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("websocketServletWebServerCustomizer", WebSocketServletAutoConfiguration__TestContext003_BeanDefinitions.TomcatWebSocketConfiguration.getWebsocketServletWebServerCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration", WebSocketServletAutoConfiguration__TestContext003_BeanDefinitions.getWebSocketServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat", ServletWebServerFactoryConfiguration__TestContext003_BeanDefinitions.EmbeddedTomcat.getEmbeddedTomcatBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactory", ServletWebServerFactoryConfiguration__TestContext003_BeanDefinitions.EmbeddedTomcat.getTomcatServletWebServerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration", ServletWebServerFactoryAutoConfiguration__TestContext003_BeanDefinitions.getServletWebServerFactoryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__TestContext003_BeanDefinitions.getServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__TestContext003_BeanDefinitions.getTomcatServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("server-org.springframework.boot.autoconfigure.web.ServerProperties", ServerProperties__TestContext003_BeanDefinitions.getServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("webServerFactoryCustomizerBeanPostProcessor", WebServerFactoryCustomizerBeanPostProcessor__TestContext003_BeanDefinitions.getWebServerFactoryCustomizerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageRegistrarBeanPostProcessor", ErrorPageRegistrarBeanPostProcessor__TestContext003_BeanDefinitions.getErrorPageRegistrarBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration", DispatcherServletAutoConfiguration__TestContext003_BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServlet", DispatcherServletAutoConfiguration__TestContext003_BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletBeanDefinition());
    beanFactory.registerBeanDefinition("spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties", WebMvcProperties__TestContext003_BeanDefinitions.getWebMvcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration", DispatcherServletAutoConfiguration__TestContext003_BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServletRegistration", DispatcherServletAutoConfiguration__TestContext003_BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration", DispatcherServletAutoConfiguration__TestContext003_BeanDefinitions.getDispatcherServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration", JacksonAutoConfiguration__TestContext003_BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getJacksonObjectMapperBuilderCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("standardJacksonObjectMapperBuilderCustomizer", JacksonAutoConfiguration__TestContext003_BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getStandardJacksonObjectMapperBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties", JacksonProperties__TestContext003_BeanDefinitions.getJacksonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration", JacksonAutoConfiguration__TestContext003_BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapperBuilder", JacksonAutoConfiguration__TestContext003_BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration", JacksonAutoConfiguration__TestContext003_BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("parameterNamesModule", JacksonAutoConfiguration__TestContext003_BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration", JacksonAutoConfiguration__TestContext003_BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapper", JacksonAutoConfiguration__TestContext003_BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration", JacksonAutoConfiguration__TestContext003_BeanDefinitions.JacksonMixinConfiguration.getJacksonMixinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModuleEntries", JsonMixinModuleEntries__TestContext003_BeanDefinitions.getJsonMixinModuleEntriesBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModule", JacksonAutoConfiguration__TestContext003_BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration", JacksonAutoConfiguration__TestContext003_BeanDefinitions.getJacksonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonComponentModule", JacksonAutoConfiguration__TestContext003_BeanDefinitions.getJsonComponentModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration", CodecsAutoConfiguration__TestContext003_BeanDefinitions.DefaultCodecsConfiguration.getDefaultCodecsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultCodecCustomizer", CodecsAutoConfiguration__TestContext003_BeanDefinitions.DefaultCodecsConfiguration.getDefaultCodecCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration", CodecsAutoConfiguration__TestContext003_BeanDefinitions.JacksonCodecConfiguration.getJacksonCodecConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonCodecCustomizer", CodecsAutoConfiguration__TestContext003_BeanDefinitions.JacksonCodecConfiguration.getJacksonCodecCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration", CodecsAutoConfiguration__TestContext003_BeanDefinitions.getCodecsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.codec-org.springframework.boot.autoconfigure.codec.CodecProperties", CodecProperties__TestContext003_BeanDefinitions.getCodecPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__TestContext003_BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskExecutorBuilder", TaskExecutorConfigurations__TestContext003_BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration", TaskExecutorConfigurations__TestContext003_BeanDefinitions.TaskExecutorBuilderConfiguration.getTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskExecutorBuilder", TaskExecutorConfigurations__TestContext003_BeanDefinitions.TaskExecutorBuilderConfiguration.getTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__TestContext003_BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskExecutorBuilder", TaskExecutorConfigurations__TestContext003_BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration", TaskExecutorConfigurations__TestContext003_BeanDefinitions.TaskExecutorConfiguration.getTaskExecutorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutor", TaskExecutorConfigurations__TestContext003_BeanDefinitions.TaskExecutorConfiguration.getApplicationTaskExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration", TaskExecutionAutoConfiguration__TestContext003_BeanDefinitions.getTaskExecutionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties", TaskExecutionProperties__TestContext003_BeanDefinitions.getTaskExecutionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration", ErrorMvcAutoConfiguration__TestContext003_BeanDefinitions.WhitelabelErrorViewConfiguration.getWhitelabelErrorViewConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("error", ErrorMvcAutoConfiguration__TestContext003_BeanDefinitions.WhitelabelErrorViewConfiguration.getErrorBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameViewResolver", ErrorMvcAutoConfiguration__TestContext003_BeanDefinitions.WhitelabelErrorViewConfiguration.getBeanNameViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration", ErrorMvcAutoConfiguration__TestContext003_BeanDefinitions.DefaultErrorViewResolverConfiguration.getDefaultErrorViewResolverConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("conventionErrorViewResolver", ErrorMvcAutoConfiguration__TestContext003_BeanDefinitions.DefaultErrorViewResolverConfiguration.getConventionErrorViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.web-org.springframework.boot.autoconfigure.web.WebProperties", WebProperties__TestContext003_BeanDefinitions.getWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration", ErrorMvcAutoConfiguration__TestContext003_BeanDefinitions.getErrorMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("errorAttributes", ErrorMvcAutoConfiguration__TestContext003_BeanDefinitions.getErrorAttributesBeanDefinition());
    beanFactory.registerBeanDefinition("basicErrorController", ErrorMvcAutoConfiguration__TestContext003_BeanDefinitions.getBasicErrorControllerBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageCustomizer", ErrorMvcAutoConfiguration__TestContext003_BeanDefinitions.getErrorPageCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("preserveErrorControllerTargetClassPostProcessor", ErrorMvcAutoConfiguration__TestContext003_BeanDefinitions.getPreserveErrorControllerTargetClassPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getEnableWebMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageHandlerMapping", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageNotAcceptableHandlerMapping", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageNotAcceptableHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("localeResolver", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getLocaleResolverBeanDefinition());
    beanFactory.registerBeanDefinition("themeResolver", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getThemeResolverBeanDefinition());
    beanFactory.registerBeanDefinition("flashMapManager", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getFlashMapManagerBeanDefinition());
    beanFactory.registerBeanDefinition("mvcConversionService", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getMvcConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("mvcValidator", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getMvcValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("mvcContentNegotiationManager", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getMvcContentNegotiationManagerBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerMapping", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPatternParser", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getMvcPatternParserBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUrlPathHelper", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getMvcUrlPathHelperBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPathMatcher", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getMvcPathMatcherBeanDefinition());
    beanFactory.registerBeanDefinition("viewControllerHandlerMapping", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getViewControllerHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameHandlerMapping", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getBeanNameHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionMapping", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceHandlerMapping", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getResourceHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcResourceUrlProvider", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getMvcResourceUrlProviderBeanDefinition());
    beanFactory.registerBeanDefinition("defaultServletHandlerMapping", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getDefaultServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerAdapter", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerFunctionAdapter", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getHandlerFunctionAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUriComponentsContributor", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getMvcUriComponentsContributorBeanDefinition());
    beanFactory.registerBeanDefinition("httpRequestHandlerAdapter", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getHttpRequestHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("simpleControllerHandlerAdapter", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getSimpleControllerHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerExceptionResolver", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getHandlerExceptionResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcViewResolver", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getMvcViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospector", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getMvcHandlerMappingIntrospectorBeanDefinition());
    beanFactory.registerBeanDefinition("viewNameTranslator", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.EnableWebMvcConfiguration.getViewNameTranslatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.WebMvcAutoConfigurationAdapter.getWebMvcAutoConfigurationAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("defaultViewResolver", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.WebMvcAutoConfigurationAdapter.getDefaultViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("viewResolver", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.WebMvcAutoConfigurationAdapter.getViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("requestContextFilter", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.WebMvcAutoConfigurationAdapter.getRequestContextFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.getWebMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("formContentFilter", WebMvcAutoConfiguration__TestContext003_BeanDefinitions.getFormContentFilterBeanDefinition());
    beanFactory.registerBeanDefinition("timefold-ai.timefold.solver.spring.boot.autoconfigure.config.TimefoldProperties", TimefoldProperties__TestContext003_BeanDefinitions.getTimefoldPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("ai.timefold.solver.spring.boot.autoconfigure.TimefoldSolverBeanFactory$TimefoldJacksonConfiguration", TimefoldSolverBeanFactory__TestContext003_BeanDefinitions.TimefoldJacksonConfiguration.getTimefoldJacksonConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonModule", TimefoldSolverBeanFactory__TestContext003_BeanDefinitions.TimefoldJacksonConfiguration.getJacksonModuleBeanDefinition());
    beanFactory.registerBeanDefinition("ai.timefold.solver.spring.boot.autoconfigure.TimefoldSolverBeanFactory$TimefoldConstraintVerifierConfiguration", TimefoldSolverBeanFactory__TestContext003_BeanDefinitions.TimefoldConstraintVerifierConfiguration.getTimefoldConstraintVerifierConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("constraintVerifier", TimefoldSolverBeanFactory__TestContext003_BeanDefinitions.TimefoldConstraintVerifierConfiguration.getConstraintVerifierBeanDefinition());
    beanFactory.registerBeanDefinition("ai.timefold.solver.spring.boot.autoconfigure.TimefoldSolverBeanFactory", TimefoldSolverBeanFactory__TestContext003_BeanDefinitions.getTimefoldSolverBeanFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("getBanner", TimefoldSolverBeanFactory__TestContext003_BeanDefinitions.getGetBannerBeanDefinition());
    beanFactory.registerBeanDefinition("getSolverFactory", TimefoldSolverBeanFactory__TestContext003_BeanDefinitions.getGetSolverFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("solverManager", TimefoldSolverBeanFactory__TestContext003_BeanDefinitions.getSolverManagerBeanDefinition());
    beanFactory.registerBeanDefinition("scoreManager", TimefoldSolverBeanFactory__TestContext003_BeanDefinitions.getScoreManagerBeanDefinition());
    beanFactory.registerBeanDefinition("solutionManager", TimefoldSolverBeanFactory__TestContext003_BeanDefinitions.getSolutionManagerBeanDefinition());
    beanFactory.registerBeanDefinition("constraintMetaModel", TimefoldSolverBeanFactory__TestContext003_BeanDefinitions.getConstraintMetaModelBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider", SpringDocConfiguration__TestContext003_BeanDefinitions.QuerydslProvider.getQuerydslProviderBeanDefinition());
    beanFactory.registerBeanDefinition("queryDslQuerydslPredicateOperationCustomizer", SpringDocConfiguration__TestContext003_BeanDefinitions.QuerydslProvider.getQueryDslQuerydslPredicateOperationCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice", SpringDocConfiguration__TestContext003_BeanDefinitions.OpenApiResourceAdvice.getOpenApiResourceAdviceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration", SpringDocConfiguration__TestContext003_BeanDefinitions.SpringDocWebFluxSupportConfiguration.getSpringDocWebFluxSupportConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxSupportConverter", SpringDocConfiguration__TestContext003_BeanDefinitions.SpringDocWebFluxSupportConfiguration.getWebFluxSupportConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$SpringDocRepositoryRestConfiguration", SpringDocConfiguration__TestContext003_BeanDefinitions.SpringDocRepositoryRestConfiguration.getSpringDocRepositoryRestConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryRestConfigurationProvider", SpringDocConfiguration__TestContext003_BeanDefinitions.SpringDocRepositoryRestConfiguration.getRepositoryRestConfigurationProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider", SpringDocConfiguration__TestContext003_BeanDefinitions.SpringDocSpringDataWebPropertiesProvider.getSpringDocSpringDataWebPropertiesProviderBeanDefinition());
    beanFactory.registerBeanDefinition("springDataWebPropertiesProvider", SpringDocConfiguration__TestContext003_BeanDefinitions.SpringDocSpringDataWebPropertiesProvider.getSpringDataWebPropertiesProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration", SpringDocConfiguration__TestContext003_BeanDefinitions.WebConversionServiceConfiguration.getWebConversionServiceConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webConversionServiceProvider", SpringDocConfiguration__TestContext003_BeanDefinitions.WebConversionServiceConfiguration.getWebConversionServiceProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration", SpringDocConfiguration__TestContext003_BeanDefinitions.getSpringDocConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("localSpringDocParameterNameDiscoverer", SpringDocConfiguration__TestContext003_BeanDefinitions.getLocalSpringDocParameterNameDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("additionalModelsConverter", SpringDocConfiguration__TestContext003_BeanDefinitions.getAdditionalModelsConverterBeanDefinition());
    beanFactory.registerBeanDefinition("fileSupportConverter", SpringDocConfiguration__TestContext003_BeanDefinitions.getFileSupportConverterBeanDefinition());
    beanFactory.registerBeanDefinition("responseSupportConverter", SpringDocConfiguration__TestContext003_BeanDefinitions.getResponseSupportConverterBeanDefinition());
    beanFactory.registerBeanDefinition("schemaPropertyDeprecatingConverter", SpringDocConfiguration__TestContext003_BeanDefinitions.getSchemaPropertyDeprecatingConverterBeanDefinition());
    beanFactory.registerBeanDefinition("polymorphicModelConverter", SpringDocConfiguration__TestContext003_BeanDefinitions.getPolymorphicModelConverterBeanDefinition());
    beanFactory.registerBeanDefinition("openAPIBuilder", SpringDocConfiguration__TestContext003_BeanDefinitions.getOpenAPIBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("modelConverterRegistrar", SpringDocConfiguration__TestContext003_BeanDefinitions.getModelConverterRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("operationBuilder", SpringDocConfiguration__TestContext003_BeanDefinitions.getOperationBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("propertyResolverUtils", SpringDocConfiguration__TestContext003_BeanDefinitions.getPropertyResolverUtilsBeanDefinition());
    beanFactory.registerBeanDefinition("requestBodyBuilder", SpringDocConfiguration__TestContext003_BeanDefinitions.getRequestBodyBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("securityParser", SpringDocConfiguration__TestContext003_BeanDefinitions.getSecurityParserBeanDefinition());
    beanFactory.registerBeanDefinition("genericReturnTypeParser", SpringDocConfiguration__TestContext003_BeanDefinitions.getGenericReturnTypeParserBeanDefinition());
    beanFactory.registerBeanDefinition("parameterBuilder", SpringDocConfiguration__TestContext003_BeanDefinitions.getParameterBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("springDocProviders", SpringDocConfiguration__TestContext003_BeanDefinitions.getSpringDocProvidersBeanDefinition());
    beanFactory.registerBeanDefinition("springdocObjectMapperProvider", SpringDocConfiguration__TestContext003_BeanDefinitions.getSpringdocObjectMapperProviderBeanDefinition());
    beanFactory.registerBeanDefinition("springDocCustomizers", SpringDocConfiguration__TestContext003_BeanDefinitions.getSpringDocCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocDataRestConfiguration$SpringRepositoryRestResourceProviderConfiguration", SpringDocDataRestConfiguration__TestContext003_BeanDefinitions.SpringRepositoryRestResourceProviderConfiguration.getSpringRepositoryRestResourceProviderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("springRepositoryRestResourceProvider", SpringDocDataRestConfiguration__TestContext003_BeanDefinitions.SpringRepositoryRestResourceProviderConfiguration.getSpringRepositoryRestResourceProviderBeanDefinition());
    beanFactory.registerBeanDefinition("dataRestRouterOperationBuilder", SpringDocDataRestConfiguration__TestContext003_BeanDefinitions.SpringRepositoryRestResourceProviderConfiguration.getDataRestRouterOperationBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("dataRestOperationBuilder", SpringDocDataRestConfiguration__TestContext003_BeanDefinitions.SpringRepositoryRestResourceProviderConfiguration.getDataRestOperationBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("dataRestRequestBuilder", SpringDocDataRestConfiguration__TestContext003_BeanDefinitions.SpringRepositoryRestResourceProviderConfiguration.getDataRestRequestBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("dataRestResponseBuilder", SpringDocDataRestConfiguration__TestContext003_BeanDefinitions.SpringRepositoryRestResourceProviderConfiguration.getDataRestResponseBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("dataRestTagsBuilder", SpringDocDataRestConfiguration__TestContext003_BeanDefinitions.SpringRepositoryRestResourceProviderConfiguration.getDataRestTagsBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("springDocDataRestUtils", SpringDocDataRestConfiguration__TestContext003_BeanDefinitions.SpringRepositoryRestResourceProviderConfiguration.getSpringDocDataRestUtilsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocDataRestConfiguration", SpringDocDataRestConfiguration__TestContext003_BeanDefinitions.getSpringDocDataRestConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("halProvider", SpringDocDataRestConfiguration__TestContext003_BeanDefinitions.getHalProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocHateoasConfiguration", SpringDocHateoasConfiguration__TestContext003_BeanDefinitions.getSpringDocHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("collectionModelContentConverter", SpringDocHateoasConfiguration__TestContext003_BeanDefinitions.getCollectionModelContentConverterBeanDefinition());
    beanFactory.registerBeanDefinition("linksSchemaCustomizer", SpringDocHateoasConfiguration__TestContext003_BeanDefinitions.getLinksSchemaCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocPageableConfiguration", SpringDocPageableConfiguration__TestContext003_BeanDefinitions.getSpringDocPageableConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableOpenAPIConverter", SpringDocPageableConfiguration__TestContext003_BeanDefinitions.getPageableOpenAPIConverterBeanDefinition());
    beanFactory.registerBeanDefinition("pageOpenAPIConverter", SpringDocPageableConfiguration__TestContext003_BeanDefinitions.getPageOpenAPIConverterBeanDefinition());
    beanFactory.registerBeanDefinition("delegatingMethodParameterCustomizer", SpringDocPageableConfiguration__TestContext003_BeanDefinitions.getDelegatingMethodParameterCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocSortConfiguration", SpringDocSortConfiguration__TestContext003_BeanDefinitions.getSpringDocSortConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("sortOpenAPIConverter", SpringDocSortConfiguration__TestContext003_BeanDefinitions.getSortOpenAPIConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocUIConfiguration", SpringDocUIConfiguration__TestContext003_BeanDefinitions.getSpringDocUIConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SpringDocConfigProperties", SpringDocConfigProperties__TestContext003_BeanDefinitions.getSpringDocConfigPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SwaggerUiConfigParameters", SwaggerUiConfigParameters__TestContext003_BeanDefinitions.getSwaggerUiConfigParametersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SwaggerUiConfigProperties", SwaggerUiConfigProperties__TestContext003_BeanDefinitions.getSwaggerUiConfigPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SwaggerUiOAuthProperties", SwaggerUiOAuthProperties__TestContext003_BeanDefinitions.getSwaggerUiOAuthPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration", SpringDocWebMvcConfiguration__TestContext003_BeanDefinitions.SpringDocWebMvcActuatorConfiguration.getSpringDocWebMvcActuatorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration", SpringDocWebMvcConfiguration__TestContext003_BeanDefinitions.SpringDocWebMvcRouterConfiguration.getSpringDocWebMvcRouterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionProvider", SpringDocWebMvcConfiguration__TestContext003_BeanDefinitions.SpringDocWebMvcRouterConfiguration.getRouterFunctionProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration", SpringDocWebMvcConfiguration__TestContext003_BeanDefinitions.getSpringDocWebMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("openApiResource", SpringDocWebMvcConfiguration__TestContext003_BeanDefinitions.getOpenApiResourceBeanDefinition());
    beanFactory.registerBeanDefinition("requestBuilder", SpringDocWebMvcConfiguration__TestContext003_BeanDefinitions.getRequestBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("springWebProvider", SpringDocWebMvcConfiguration__TestContext003_BeanDefinitions.getSpringWebProviderBeanDefinition());
    beanFactory.registerBeanDefinition("responseBuilder", SpringDocWebMvcConfiguration__TestContext003_BeanDefinitions.getResponseBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.ui.SwaggerConfig", SwaggerConfig__TestContext003_BeanDefinitions.getSwaggerConfigBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerWelcome", SwaggerConfig__TestContext003_BeanDefinitions.getSwaggerWelcomeBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerConfigResource", SwaggerConfig__TestContext003_BeanDefinitions.getSwaggerConfigResourceBeanDefinition());
    beanFactory.registerBeanDefinition("indexPageTransformer", SwaggerConfig__TestContext003_BeanDefinitions.getIndexPageTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerWebMvcConfigurer", SwaggerConfig__TestContext003_BeanDefinitions.getSwaggerWebMvcConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerResourceResolver", SwaggerConfig__TestContext003_BeanDefinitions.getSwaggerResourceResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration", ApplicationAvailabilityAutoConfiguration__TestContext003_BeanDefinitions.getApplicationAvailabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationAvailability", ApplicationAvailabilityAutoConfiguration__TestContext003_BeanDefinitions.getApplicationAvailabilityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration", AvailabilityHealthContributorAutoConfiguration__TestContext003_BeanDefinitions.getAvailabilityHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration", JtaAutoConfiguration__TestContext003_BeanDefinitions.getJtaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari", DataSourceConfiguration__TestContext003_BeanDefinitions.Hikari.getHikariBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcConnectionDetailsHikariBeanPostProcessor", DataSourceConfiguration__TestContext003_BeanDefinitions.Hikari.getJdbcConnectionDetailsHikariBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("dataSource", DataSourceConfiguration__TestContext003_BeanDefinitions.Hikari.getDataSourceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration", DataSourceAutoConfiguration__TestContext003_BeanDefinitions.PooledDataSourceConfiguration.getPooledDataSourceConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcConnectionDetails", DataSourceAutoConfiguration__TestContext003_BeanDefinitions.PooledDataSourceConfiguration.getJdbcConnectionDetailsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration", DataSourcePoolMetadataProvidersConfiguration__TestContext003_BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hikariPoolDataSourceMetadataProvider", DataSourcePoolMetadataProvidersConfiguration__TestContext003_BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration", DataSourcePoolMetadataProvidersConfiguration__TestContext003_BeanDefinitions.getDataSourcePoolMetadataProvidersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration", DataSourceAutoConfiguration__TestContext003_BeanDefinitions.getDataSourceAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties", DataSourceProperties__TestContext003_BeanDefinitions.getDataSourcePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration", TransactionManagerCustomizationAutoConfiguration__TestContext003_BeanDefinitions.getTransactionManagerCustomizationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("platformTransactionManagerCustomizers", TransactionManagerCustomizationAutoConfiguration__TestContext003_BeanDefinitions.getPlatformTransactionManagerCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("transactionExecutionListeners", TransactionManagerCustomizationAutoConfiguration__TestContext003_BeanDefinitions.getTransactionExecutionListenersBeanDefinition());
    beanFactory.registerBeanDefinition("spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties", TransactionProperties__TestContext003_BeanDefinitions.getTransactionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration", JpaBaseConfiguration__TestContext003_BeanDefinitions.JpaWebConfiguration.getJpaWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptor", JpaBaseConfiguration__TestContext003_BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptorConfigurer", JpaBaseConfiguration__TestContext003_BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration", JpaBaseConfiguration__TestContext003_BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceManagedTypes", JpaBaseConfiguration__TestContext003_BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration", HibernateJpaConfiguration__TestContext003_BeanDefinitions.getHibernateJpaConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionManager", HibernateJpaConfiguration__TestContext003_BeanDefinitions.getTransactionManagerBeanDefinition());
    beanFactory.registerBeanDefinition("jpaVendorAdapter", HibernateJpaConfiguration__TestContext003_BeanDefinitions.getJpaVendorAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactoryBuilder", HibernateJpaConfiguration__TestContext003_BeanDefinitions.getEntityManagerFactoryBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactory", HibernateJpaConfiguration__TestContext003_BeanDefinitions.getEntityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties", HibernateProperties__TestContext003_BeanDefinitions.getHibernatePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties", JpaProperties__TestContext003_BeanDefinitions.getJpaPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration", HibernateJpaAutoConfiguration__TestContext003_BeanDefinitions.getHibernateJpaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration", HealthEndpointConfiguration__TestContext003_BeanDefinitions.getHealthEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthStatusAggregator", HealthEndpointConfiguration__TestContext003_BeanDefinitions.getHealthStatusAggregatorBeanDefinition());
    beanFactory.registerBeanDefinition("healthHttpCodeStatusMapper", HealthEndpointConfiguration__TestContext003_BeanDefinitions.getHealthHttpCodeStatusMapperBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroups", HealthEndpointConfiguration__TestContext003_BeanDefinitions.getHealthEndpointGroupsBeanDefinition());
    beanFactory.registerBeanDefinition("healthContributorRegistry", HealthEndpointConfiguration__TestContext003_BeanDefinitions.getHealthContributorRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroupMembershipValidator", HealthEndpointConfiguration__TestContext003_BeanDefinitions.getHealthEndpointGroupMembershipValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpoint", HealthEndpointConfiguration__TestContext003_BeanDefinitions.getHealthEndpointBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroupsBeanPostProcessor", HealthEndpointConfiguration__TestContext003_BeanDefinitions.getHealthEndpointGroupsBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration", ReactiveHealthEndpointConfiguration__TestContext003_BeanDefinitions.getReactiveHealthEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("reactiveHealthContributorRegistry", ReactiveHealthEndpointConfiguration__TestContext003_BeanDefinitions.getReactiveHealthContributorRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration", HealthEndpointWebExtensionConfiguration__TestContext003_BeanDefinitions.MvcAdditionalHealthEndpointPathsConfiguration.getMvcAdditionalHealthEndpointPathsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointWebMvcHandlerMapping", HealthEndpointWebExtensionConfiguration__TestContext003_BeanDefinitions.MvcAdditionalHealthEndpointPathsConfiguration.getHealthEndpointWebMvcHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration", HealthEndpointWebExtensionConfiguration__TestContext003_BeanDefinitions.getHealthEndpointWebExtensionConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointWebExtension", HealthEndpointWebExtensionConfiguration__TestContext003_BeanDefinitions.getHealthEndpointWebExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration", HealthEndpointAutoConfiguration__TestContext003_BeanDefinitions.getHealthEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties", HealthEndpointProperties__TestContext003_BeanDefinitions.getHealthEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration", ProjectInfoAutoConfiguration__TestContext003_BeanDefinitions.getProjectInfoAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties", ProjectInfoProperties__TestContext003_BeanDefinitions.getProjectInfoPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration", InfoContributorAutoConfiguration__TestContext003_BeanDefinitions.getInfoContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties", InfoContributorProperties__TestContext003_BeanDefinitions.getInfoContributorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration", ServletManagementContextAutoConfiguration__TestContext003_BeanDefinitions.getServletManagementContextAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebChildContextFactory", ServletManagementContextAutoConfiguration__TestContext003_BeanDefinitions.getServletWebChildContextFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("managementServletContext", ServletManagementContextAutoConfiguration__TestContext003_BeanDefinitions.getManagementServletContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration", EndpointAutoConfiguration__TestContext003_BeanDefinitions.getEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("endpointOperationParameterMapper", EndpointAutoConfiguration__TestContext003_BeanDefinitions.getEndpointOperationParameterMapperBeanDefinition());
    beanFactory.registerBeanDefinition("endpointCachingOperationInvokerAdvisor", EndpointAutoConfiguration__TestContext003_BeanDefinitions.getEndpointCachingOperationInvokerAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration", JacksonEndpointAutoConfiguration__TestContext003_BeanDefinitions.getJacksonEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("endpointObjectMapper", JacksonEndpointAutoConfiguration__TestContext003_BeanDefinitions.getEndpointObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration", WebEndpointAutoConfiguration__TestContext003_BeanDefinitions.WebEndpointServletConfiguration.getWebEndpointServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletEndpointDiscoverer", WebEndpointAutoConfiguration__TestContext003_BeanDefinitions.WebEndpointServletConfiguration.getServletEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration", WebEndpointAutoConfiguration__TestContext003_BeanDefinitions.getWebEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointPathMapper", WebEndpointAutoConfiguration__TestContext003_BeanDefinitions.getWebEndpointPathMapperBeanDefinition());
    beanFactory.registerBeanDefinition("endpointMediaTypes", WebEndpointAutoConfiguration__TestContext003_BeanDefinitions.getEndpointMediaTypesBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointDiscoverer", WebEndpointAutoConfiguration__TestContext003_BeanDefinitions.getWebEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("controllerEndpointDiscoverer", WebEndpointAutoConfiguration__TestContext003_BeanDefinitions.getControllerEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("pathMappedEndpoints", WebEndpointAutoConfiguration__TestContext003_BeanDefinitions.getPathMappedEndpointsBeanDefinition());
    beanFactory.registerBeanDefinition("webExposeExcludePropertyEndpointFilter", WebEndpointAutoConfiguration__TestContext003_BeanDefinitions.getWebExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("controllerExposeExcludePropertyEndpointFilter", WebEndpointAutoConfiguration__TestContext003_BeanDefinitions.getControllerExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties", WebEndpointProperties__TestContext003_BeanDefinitions.getWebEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration", DiskSpaceHealthContributorAutoConfiguration__TestContext003_BeanDefinitions.getDiskSpaceHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("diskSpaceHealthIndicator", DiskSpaceHealthContributorAutoConfiguration__TestContext003_BeanDefinitions.getDiskSpaceHealthIndicatorBeanDefinition());
    beanFactory.registerBeanDefinition("management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties", DiskSpaceHealthIndicatorProperties__TestContext003_BeanDefinitions.getDiskSpaceHealthIndicatorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration", HealthContributorAutoConfiguration__TestContext003_BeanDefinitions.getHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pingHealthContributor", HealthContributorAutoConfiguration__TestContext003_BeanDefinitions.getPingHealthContributorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration", DataSourceHealthContributorAutoConfiguration__TestContext003_BeanDefinitions.getDataSourceHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dbHealthContributor", DataSourceHealthContributorAutoConfiguration__TestContext003_BeanDefinitions.getDbHealthContributorBeanDefinition());
    beanFactory.registerBeanDefinition("management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties", DataSourceHealthIndicatorProperties__TestContext003_BeanDefinitions.getDataSourceHealthIndicatorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration", MetricsAutoConfiguration__TestContext003_BeanDefinitions.getMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("micrometerClock", MetricsAutoConfiguration__TestContext003_BeanDefinitions.getMicrometerClockBeanDefinition());
    beanFactory.registerBeanDefinition("meterRegistryPostProcessor", MetricsAutoConfiguration__TestContext003_BeanDefinitions.getMeterRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("propertiesMeterFilter", MetricsAutoConfiguration__TestContext003_BeanDefinitions.getPropertiesMeterFilterBeanDefinition());
    beanFactory.registerBeanDefinition("meterRegistryCloser", MetricsAutoConfiguration__TestContext003_BeanDefinitions.getMeterRegistryCloserBeanDefinition());
    beanFactory.registerBeanDefinition("management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties", MetricsProperties__TestContext003_BeanDefinitions.getMetricsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration", SimpleMetricsExportAutoConfiguration__TestContext003_BeanDefinitions.getSimpleMetricsExportAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleMeterRegistry", SimpleMetricsExportAutoConfiguration__TestContext003_BeanDefinitions.getSimpleMeterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("simpleConfig", SimpleMetricsExportAutoConfiguration__TestContext003_BeanDefinitions.getSimpleConfigBeanDefinition());
    beanFactory.registerBeanDefinition("management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties", SimpleProperties__TestContext003_BeanDefinitions.getSimplePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration", CompositeMeterRegistryAutoConfiguration__TestContext003_BeanDefinitions.getCompositeMeterRegistryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration", JvmMetricsAutoConfiguration__TestContext003_BeanDefinitions.getJvmMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jvmGcMetrics", JvmMetricsAutoConfiguration__TestContext003_BeanDefinitions.getJvmGcMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmHeapPressureMetrics", JvmMetricsAutoConfiguration__TestContext003_BeanDefinitions.getJvmHeapPressureMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmMemoryMetrics", JvmMetricsAutoConfiguration__TestContext003_BeanDefinitions.getJvmMemoryMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmThreadMetrics", JvmMetricsAutoConfiguration__TestContext003_BeanDefinitions.getJvmThreadMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("classLoaderMetrics", JvmMetricsAutoConfiguration__TestContext003_BeanDefinitions.getClassLoaderMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmInfoMetrics", JvmMetricsAutoConfiguration__TestContext003_BeanDefinitions.getJvmInfoMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmCompilationMetrics", JvmMetricsAutoConfiguration__TestContext003_BeanDefinitions.getJvmCompilationMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration", LogbackMetricsAutoConfiguration__TestContext003_BeanDefinitions.getLogbackMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("logbackMetrics", LogbackMetricsAutoConfiguration__TestContext003_BeanDefinitions.getLogbackMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration", SystemMetricsAutoConfiguration__TestContext003_BeanDefinitions.getSystemMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("uptimeMetrics", SystemMetricsAutoConfiguration__TestContext003_BeanDefinitions.getUptimeMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("processorMetrics", SystemMetricsAutoConfiguration__TestContext003_BeanDefinitions.getProcessorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("fileDescriptorMetrics", SystemMetricsAutoConfiguration__TestContext003_BeanDefinitions.getFileDescriptorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("diskSpaceMetrics", SystemMetricsAutoConfiguration__TestContext003_BeanDefinitions.getDiskSpaceMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration", RepositoryMetricsAutoConfiguration__TestContext003_BeanDefinitions.getRepositoryMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryTagsProvider", RepositoryMetricsAutoConfiguration__TestContext003_BeanDefinitions.getRepositoryTagsProviderBeanDefinition());
    beanFactory.registerBeanDefinition("metricsRepositoryMethodInvocationListener", RepositoryMetricsAutoConfiguration__TestContext003_BeanDefinitions.getMetricsRepositoryMethodInvocationListenerBeanDefinition());
    beanFactory.registerBeanDefinition("metricsRepositoryMethodInvocationListenerBeanPostProcessor", RepositoryMetricsAutoConfiguration__TestContext003_BeanDefinitions.getMetricsRepositoryMethodInvocationListenerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration", IntegrationMetricsAutoConfiguration__TestContext003_BeanDefinitions.getIntegrationMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration", DataSourcePoolMetricsAutoConfiguration__TestContext003_BeanDefinitions.HikariDataSourceMetricsConfiguration.getHikariDataSourceMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hikariDataSourceMeterBinder", DataSourcePoolMetricsAutoConfiguration__TestContext003_BeanDefinitions.HikariDataSourceMetricsConfiguration.getHikariDataSourceMeterBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration", DataSourcePoolMetricsAutoConfiguration__TestContext003_BeanDefinitions.DataSourcePoolMetadataMetricsConfiguration.getDataSourcePoolMetadataMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dataSourcePoolMetadataMeterBinder", DataSourcePoolMetricsAutoConfiguration__TestContext003_BeanDefinitions.DataSourcePoolMetadataMetricsConfiguration.getDataSourcePoolMetadataMeterBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration", DataSourcePoolMetricsAutoConfiguration__TestContext003_BeanDefinitions.getDataSourcePoolMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration", StartupTimeMetricsListenerAutoConfiguration__TestContext003_BeanDefinitions.getStartupTimeMetricsListenerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("startupTimeMetrics", StartupTimeMetricsListenerAutoConfiguration__TestContext003_BeanDefinitions.getStartupTimeMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__TestContext003_BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskSchedulerBuilder", TaskSchedulingConfigurations__TestContext003_BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__TestContext003_BeanDefinitions.TaskSchedulerBuilderConfiguration.getTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskSchedulerBuilder", TaskSchedulingConfigurations__TestContext003_BeanDefinitions.TaskSchedulerBuilderConfiguration.getTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__TestContext003_BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskSchedulerBuilder", TaskSchedulingConfigurations__TestContext003_BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration", TaskSchedulingAutoConfiguration__TestContext003_BeanDefinitions.getTaskSchedulingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties", TaskSchedulingProperties__TestContext003_BeanDefinitions.getTaskSchedulingPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration", TaskExecutorMetricsAutoConfiguration__TestContext003_BeanDefinitions.getTaskExecutorMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("eagerTaskExecutorMetrics", TaskExecutorMetricsAutoConfiguration__TestContext003_BeanDefinitions.getEagerTaskExecutorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration", TomcatMetricsAutoConfiguration__TestContext003_BeanDefinitions.getTomcatMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatMetricsBinder", TomcatMetricsAutoConfiguration__TestContext003_BeanDefinitions.getTomcatMetricsBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservedAspectConfiguration", ObservationAutoConfiguration__TestContext003_BeanDefinitions.ObservedAspectConfiguration.getObservedAspectConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observedAspect", ObservationAutoConfiguration__TestContext003_BeanDefinitions.ObservedAspectConfiguration.getObservedAspectBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration", ObservationAutoConfiguration__TestContext003_BeanDefinitions.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration.getOnlyMetricsMeterObservationHandlerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultMeterObservationHandler", ObservationAutoConfiguration__TestContext003_BeanDefinitions.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration.getDefaultMeterObservationHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration", ObservationAutoConfiguration__TestContext003_BeanDefinitions.MeterObservationHandlerConfiguration.getMeterObservationHandlerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration", ObservationAutoConfiguration__TestContext003_BeanDefinitions.OnlyMetricsConfiguration.getOnlyMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsObservationHandlerGrouping", ObservationAutoConfiguration__TestContext003_BeanDefinitions.OnlyMetricsConfiguration.getMetricsObservationHandlerGroupingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration", ObservationAutoConfiguration__TestContext003_BeanDefinitions.getObservationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRegistryPostProcessor", ObservationAutoConfiguration__TestContext003_BeanDefinitions.getObservationRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("observationRegistry", ObservationAutoConfiguration__TestContext003_BeanDefinitions.getObservationRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("propertiesObservationFilter", ObservationAutoConfiguration__TestContext003_BeanDefinitions.getPropertiesObservationFilterBeanDefinition());
    beanFactory.registerBeanDefinition("management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties", ObservationProperties__TestContext003_BeanDefinitions.getObservationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration", HttpMessageConvertersAutoConfiguration__TestContext003_BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("stringHttpMessageConverter", HttpMessageConvertersAutoConfiguration__TestContext003_BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration", JacksonHttpMessageConvertersConfiguration__TestContext003_BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("mappingJackson2HttpMessageConverter", JacksonHttpMessageConvertersConfiguration__TestContext003_BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration", JacksonHttpMessageConvertersConfiguration__TestContext003_BeanDefinitions.getJacksonHttpMessageConvertersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration", HttpMessageConvertersAutoConfiguration__TestContext003_BeanDefinitions.getHttpMessageConvertersAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageConverters", HttpMessageConvertersAutoConfiguration__TestContext003_BeanDefinitions.getMessageConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration", RestClientAutoConfiguration__TestContext003_BeanDefinitions.getRestClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("httpMessageConvertersRestClientCustomizer", RestClientAutoConfiguration__TestContext003_BeanDefinitions.getHttpMessageConvertersRestClientCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientSsl", RestClientAutoConfiguration__TestContext003_BeanDefinitions.getRestClientSslBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilderConfigurer", RestClientAutoConfiguration__TestContext003_BeanDefinitions.getRestClientBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilder", RestClientAutoConfiguration__TestContext003_BeanDefinitions.getRestClientBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration", RestTemplateAutoConfiguration__TestContext003_BeanDefinitions.getRestTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilderConfigurer", RestTemplateAutoConfiguration__TestContext003_BeanDefinitions.getRestTemplateBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilder", RestTemplateAutoConfiguration__TestContext003_BeanDefinitions.getRestTemplateBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$JdkClient", ClientHttpConnectorFactoryConfiguration__TestContext003_BeanDefinitions.JdkClient.getJdkClientBeanDefinition());
    beanFactory.registerBeanDefinition("jdkClientHttpConnectorFactory", ClientHttpConnectorFactoryConfiguration__TestContext003_BeanDefinitions.JdkClient.getJdkClientHttpConnectorFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration", ClientHttpConnectorAutoConfiguration__TestContext003_BeanDefinitions.getClientHttpConnectorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webClientHttpConnector", ClientHttpConnectorAutoConfiguration__TestContext003_BeanDefinitions.getWebClientHttpConnectorBeanDefinition());
    beanFactory.registerBeanDefinition("webClientHttpConnectorCustomizer", ClientHttpConnectorAutoConfiguration__TestContext003_BeanDefinitions.getWebClientHttpConnectorCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration", WebClientAutoConfiguration__TestContext003_BeanDefinitions.WebClientCodecsConfiguration.getWebClientCodecsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("exchangeStrategiesCustomizer", WebClientAutoConfiguration__TestContext003_BeanDefinitions.WebClientCodecsConfiguration.getExchangeStrategiesCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration", WebClientAutoConfiguration__TestContext003_BeanDefinitions.getWebClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webClientBuilder", WebClientAutoConfiguration__TestContext003_BeanDefinitions.getWebClientBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("webClientSsl", WebClientAutoConfiguration__TestContext003_BeanDefinitions.getWebClientSslBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration", HttpClientObservationsAutoConfiguration__TestContext003_BeanDefinitions.MeterFilterConfiguration.getMeterFilterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsHttpClientUriTagFilter", HttpClientObservationsAutoConfiguration__TestContext003_BeanDefinitions.MeterFilterConfiguration.getMetricsHttpClientUriTagFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration", RestTemplateObservationConfiguration__TestContext003_BeanDefinitions.getRestTemplateObservationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRestTemplateCustomizer", RestTemplateObservationConfiguration__TestContext003_BeanDefinitions.getObservationRestTemplateCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration", WebClientObservationConfiguration__TestContext003_BeanDefinitions.getWebClientObservationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationWebClientCustomizer", WebClientObservationConfiguration__TestContext003_BeanDefinitions.getObservationWebClientCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration", RestClientObservationConfiguration__TestContext003_BeanDefinitions.getRestClientObservationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRestClientCustomizer", RestClientObservationConfiguration__TestContext003_BeanDefinitions.getObservationRestClientCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration", HttpClientObservationsAutoConfiguration__TestContext003_BeanDefinitions.getHttpClientObservationsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration", WebMvcObservationAutoConfiguration__TestContext003_BeanDefinitions.MeterFilterConfiguration.getMeterFilterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsHttpServerUriTagFilter", WebMvcObservationAutoConfiguration__TestContext003_BeanDefinitions.MeterFilterConfiguration.getMetricsHttpServerUriTagFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration", WebMvcObservationAutoConfiguration__TestContext003_BeanDefinitions.getWebMvcObservationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webMvcObservationFilter", WebMvcObservationAutoConfiguration__TestContext003_BeanDefinitions.getWebMvcObservationFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration", ScheduledTasksObservabilityAutoConfiguration__TestContext003_BeanDefinitions.getScheduledTasksObservabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observabilitySchedulingConfigurer", ScheduledTasksObservabilityAutoConfiguration__TestContext003_BeanDefinitions.getObservabilitySchedulingConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration", AopAutoConfiguration__TestContext003_BeanDefinitions.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", AnnotationAwareAspectJAutoProxyCreator__TestContext003_BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration", AopAutoConfiguration__TestContext003_BeanDefinitions.AspectJAutoProxyingConfiguration.getAspectJAutoProxyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration", AopAutoConfiguration__TestContext003_BeanDefinitions.getAopAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration", ConfigurationPropertiesAutoConfiguration__TestContext003_BeanDefinitions.getConfigurationPropertiesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration", LifecycleAutoConfiguration__TestContext003_BeanDefinitions.getLifecycleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lifecycleProcessor", LifecycleAutoConfiguration__TestContext003_BeanDefinitions.getLifecycleProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties", LifecycleProperties__TestContext003_BeanDefinitions.getLifecyclePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration", PersistenceExceptionTranslationAutoConfiguration__TestContext003_BeanDefinitions.getPersistenceExceptionTranslationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceExceptionTranslationPostProcessor", PersistenceExceptionTranslationAutoConfiguration__TestContext003_BeanDefinitions.getPersistenceExceptionTranslationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration", JpaRepositoriesAutoConfiguration__TestContext003_BeanDefinitions.getJpaRepositoriesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_entityManagerFactory", SharedEntityManagerCreator__TestContext003_BeanDefinitions.getJpaSharedEMentityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("emBeanDefinitionRegistrarPostProcessor", EntityManagerBeanDefinitionRegistrarPostProcessor__TestContext003_BeanDefinitions.getEmBeanDefinitionRegistrarPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("jpaMappingContext", JpaMetamodelMappingContext__TestContext003_BeanDefinitions.getJpaMappingContextBeanDefinition());
    beanFactory.registerBeanDefinition("jpaContext", DefaultJpaContext__TestContext003_BeanDefinitions.getJpaContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.util.JpaMetamodelCacheCleanup", JpaMetamodelCacheCleanup__TestContext003_BeanDefinitions.getJpaMetamodelCacheCleanupBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension", JpaEvaluationContextExtension__TestContext003_BeanDefinitions.getJpaEvaluationContextExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#0", PropertiesBasedNamedQueries__TestContext003_BeanDefinitions.getNamedqueriesBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.LessonRepository.fragments#0", RepositoryComposition__TestContext003_BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition());
    beanFactory.registerBeanDefinition("lessonRepository", LessonRepository__TestContext003_BeanDefinitions.getLessonRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#1", PropertiesBasedNamedQueries__TestContext003_BeanDefinitions.getNamedqueriesBeanDefinition1());
    beanFactory.registerBeanDefinition("jpa.RoomRepository.fragments#0", RepositoryComposition__TestContext003_BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition1());
    beanFactory.registerBeanDefinition("roomRepository", RoomRepository__TestContext003_BeanDefinitions.getRoomRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#2", PropertiesBasedNamedQueries__TestContext003_BeanDefinitions.getNamedqueriesBeanDefinition2());
    beanFactory.registerBeanDefinition("jpa.TimeslotRepository.fragments#0", RepositoryComposition__TestContext003_BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition2());
    beanFactory.registerBeanDefinition("timeslotRepository", TimeslotRepository__TestContext003_BeanDefinitions.getTimeslotRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration", HalMediaTypeConfiguration__TestContext003_BeanDefinitions.getHalMediaTypeConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("halLinkDisocoverer", HalMediaTypeConfiguration__TestContext003_BeanDefinitions.getHalLinkDisocovererBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration", HalFormsMediaTypeConfiguration__TestContext003_BeanDefinitions.getHalFormsMediaTypeConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("halFormsLinkDiscoverer", HalFormsMediaTypeConfiguration__TestContext003_BeanDefinitions.getHalFormsLinkDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("halFormsTemplatePropertyWriter", HalFormsMediaTypeConfiguration__TestContext003_BeanDefinitions.getHalFormsTemplatePropertyWriterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.WebTestHateoasConfiguration", WebTestHateoasConfiguration__TestContext003_BeanDefinitions.getWebTestHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webTestClientConfigurer", WebTestHateoasConfiguration__TestContext003_BeanDefinitions.getWebTestClientConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.HateoasConfiguration", HateoasConfiguration__TestContext003_BeanDefinitions.getHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageResolver", HateoasConfiguration__TestContext003_BeanDefinitions.getMessageResolverBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaWebMvcConverters", HateoasConfiguration__TestContext003_BeanDefinitions.getHypermediaWebMvcConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("defaultRelProvider", HateoasConfiguration__TestContext003_BeanDefinitions.getDefaultRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("annotationRelProvider", HateoasConfiguration__TestContext003_BeanDefinitions.getAnnotationRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("_relProvider", HateoasConfiguration__TestContext003_BeanDefinitions.getRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("relProviderPluginRegistry", HateoasConfiguration__TestContext003_BeanDefinitions.getRelProviderPluginRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("linkDiscoverers", HateoasConfiguration__TestContext003_BeanDefinitions.getLinkDiscoverersBeanDefinition());
    beanFactory.registerBeanDefinition("linkDiscovererRegistry", OrderAwarePluginRegistry__TestContext003_BeanDefinitions.getLinkDiscovererRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.WebMvcEntityLinksConfiguration", WebMvcEntityLinksConfiguration__TestContext003_BeanDefinitions.getWebMvcEntityLinksConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webMvcEntityLinks", WebMvcEntityLinksConfiguration__TestContext003_BeanDefinitions.getWebMvcEntityLinksBeanDefinition());
    beanFactory.registerBeanDefinition("entityLinksPluginRegistry", WebMvcEntityLinksConfiguration__TestContext003_BeanDefinitions.getEntityLinksPluginRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("delegatingEntityLinks", WebMvcEntityLinksConfiguration__TestContext003_BeanDefinitions.getDelegatingEntityLinksBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.WebMvcHateoasConfiguration", WebMvcHateoasConfiguration__TestContext003_BeanDefinitions.getWebMvcHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaWebMvcConfigurer", WebMvcHateoasConfiguration__TestContext003_BeanDefinitions.getHypermediaWebMvcConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("representationModelProcessorInvoker", WebMvcHateoasConfiguration__TestContext003_BeanDefinitions.getRepresentationModelProcessorInvokerBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaRepresentionModelProcessorConfigurator", WebMvcHateoasConfiguration__TestContext003_BeanDefinitions.getHypermediaRepresentionModelProcessorConfiguratorBeanDefinition());
    beanFactory.registerBeanDefinition("webMvcLinkBuilderFactory", WebMvcHateoasConfiguration__TestContext003_BeanDefinitions.getWebMvcLinkBuilderFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.RestTemplateHateoasConfiguration", RestTemplateHateoasConfiguration__TestContext003_BeanDefinitions.getRestTemplateHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaRestTemplateBeanPostProcessor", RestTemplateHateoasConfiguration__TestContext003_BeanDefinitions.getHypermediaRestTemplateBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaRestTemplateConfigurer", RestTemplateHateoasConfiguration__TestContext003_BeanDefinitions.getHypermediaRestTemplateConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.WebFluxHateoasConfiguration", WebFluxHateoasConfiguration__TestContext003_BeanDefinitions.getWebFluxHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaWebFluxConfigurer", WebFluxHateoasConfiguration__TestContext003_BeanDefinitions.getHypermediaWebFluxConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("serverWebExchangeContextFilter", WebFluxHateoasConfiguration__TestContext003_BeanDefinitions.getServerWebExchangeContextFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.WebClientHateoasConfiguration", WebClientHateoasConfiguration__TestContext003_BeanDefinitions.getWebClientHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webClientConfigurer", WebClientHateoasConfiguration__TestContext003_BeanDefinitions.getWebClientConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("webClientBeanPostProcessor", WebClientHateoasConfiguration__TestContext003_BeanDefinitions.getWebClientBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.rest.webmvc.RestControllerConfiguration", RestControllerConfiguration__TestContext003_BeanDefinitions.getRestControllerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryController", RestControllerConfiguration__TestContext003_BeanDefinitions.getRepositoryControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryEntityController", RestControllerConfiguration__TestContext003_BeanDefinitions.getRepositoryEntityControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryPropertyReferenceController", RestControllerConfiguration__TestContext003_BeanDefinitions.getRepositoryPropertyReferenceControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositorySearchController", RestControllerConfiguration__TestContext003_BeanDefinitions.getRepositorySearchControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositorySchemaController", RestControllerConfiguration__TestContext003_BeanDefinitions.getRepositorySchemaControllerBeanDefinition());
    beanFactory.registerBeanDefinition("alpsController", RestControllerConfiguration__TestContext003_BeanDefinitions.getAlpsControllerBeanDefinition());
    beanFactory.registerBeanDefinition("profileController", RestControllerConfiguration__TestContext003_BeanDefinitions.getProfileControllerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataJacksonConfiguration", SpringDataJacksonConfiguration__TestContext003_BeanDefinitions.getSpringDataJacksonConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonGeoModule", SpringDataJacksonConfiguration__TestContext003_BeanDefinitions.getJacksonGeoModuleBeanDefinition());
    beanFactory.registerBeanDefinition("pageModule", SpringDataJacksonConfiguration__TestContext003_BeanDefinitions.getPageModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getRepositoryRestMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("repositories", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getRepositoriesBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryRelProvider", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getRepositoryRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("persistentEntities", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getPersistentEntitiesBeanDefinition());
    beanFactory.registerBeanDefinition("defaultConversionService", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getDefaultConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("validatingRepositoryEventListener", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getValidatingRepositoryEventListenerBeanDefinition());
    beanFactory.registerBeanDefinition("jpaHelper", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getJpaHelperBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryRestConfiguration", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getRepositoryRestConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("projectionDefinitionRegistrar", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getProjectionDefinitionRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("metadataConfiguration", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getMetadataConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("baseUri", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getBaseUriBeanDefinition());
    beanFactory.registerBeanDefinition("annotatedEventHandlerInvoker", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getAnnotatedEventHandlerInvokerBeanDefinition());
    beanFactory.registerBeanDefinition("repoRequestArgumentResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getRepoRequestArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("resourceMetadataHandlerMethodArgumentResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getResourceMetadataHandlerMethodArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("backendIdHandlerMethodArgumentResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getBackendIdHandlerMethodArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("eTagArgumentResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getETagArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("entityLinks", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getEntityLinksBeanDefinition());
    beanFactory.registerBeanDefinition("persistentEntityArgumentResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getPersistentEntityArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("jsonSchemaConverter", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getJsonSchemaConverterBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonHttpMessageConverter", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("halJacksonHttpMessageConverter", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getHalJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("halFormsJacksonHttpMessageConverter", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getHalFormsJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("uriListHttpMessageConverter", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getUriListHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryExporterHandlerAdapter", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getRepositoryExporterHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("restHandlerMapping", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getRestHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceMappings", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getResourceMappingsBeanDefinition());
    beanFactory.registerBeanDefinition("linkCollector", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getLinkCollectorBeanDefinition());
    beanFactory.registerBeanDefinition("excerptProjector", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getExcerptProjectorBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryRestExceptionHandler", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getRepositoryRestExceptionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryInvokerFactory", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getRepositoryInvokerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("defaultMessageConverters", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getDefaultMessageConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("alpsJsonHttpMessageConverter", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getAlpsJsonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("pageableResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getPageableResolverBeanDefinition());
    beanFactory.registerBeanDefinition("sortResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getSortResolverBeanDefinition());
    beanFactory.registerBeanDefinition("backendIdConverterRegistry", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getBackendIdConverterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("auditableBeanWrapperFactory", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getAuditableBeanWrapperFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("httpHeadersPreparer", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getHttpHeadersPreparerBeanDefinition());
    beanFactory.registerBeanDefinition("selfLinkProvider", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getSelfLinkProviderBeanDefinition());
    beanFactory.registerBeanDefinition("associationLinks", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getAssociationLinksBeanDefinition());
    beanFactory.registerBeanDefinition("representationModelAssemblersArgumentResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getRepresentationModelAssemblersArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("persistentEntityResourceAssemblerArgumentResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getPersistentEntityResourceAssemblerArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("enumTranslator", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getEnumTranslatorBeanDefinition());
    beanFactory.registerBeanDefinition("alpsConverter", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getAlpsConverterBeanDefinition());
    beanFactory.registerBeanDefinition("profileResourceProcessor", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getProfileResourceProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("pagedResourcesAssembler", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getPagedResourcesAssemblerBeanDefinition());
    beanFactory.registerBeanDefinition("pagedResourcesAssemblerArgumentResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getPagedResourcesAssemblerArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("slicedResourcesAssembler", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getSlicedResourcesAssemblerBeanDefinition());
    beanFactory.registerBeanDefinition("slicedResourcesAssemblerArgumentResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getSlicedResourcesAssemblerArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("offsetResolver", RepositoryRestMvcConfiguration__TestContext003_BeanDefinitions.getOffsetResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration", RepositoryRestMvcAutoConfiguration__TestContext003_BeanDefinitions.getRepositoryRestMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("springBootRepositoryRestConfigurer", RepositoryRestMvcAutoConfiguration__TestContext003_BeanDefinitions.getSpringBootRepositoryRestConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.data.rest-org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties", RepositoryRestProperties__TestContext003_BeanDefinitions.getRepositoryRestPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration", HypermediaAutoConfiguration__TestContext003_BeanDefinitions.getHypermediaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationJsonHalConfiguration", HypermediaAutoConfiguration__TestContext003_BeanDefinitions.getApplicationJsonHalConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.hateoas-org.springframework.boot.autoconfigure.hateoas.HateoasProperties", HateoasProperties__TestContext003_BeanDefinitions.getHateoasPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration", JdbcTemplateConfiguration__TestContext003_BeanDefinitions.getJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcTemplate", JdbcTemplateConfiguration__TestContext003_BeanDefinitions.getJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration", NamedParameterJdbcTemplateConfiguration__TestContext003_BeanDefinitions.getNamedParameterJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("namedParameterJdbcTemplate", NamedParameterJdbcTemplateConfiguration__TestContext003_BeanDefinitions.getNamedParameterJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration", JdbcTemplateAutoConfiguration__TestContext003_BeanDefinitions.getJdbcTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties", JdbcProperties__TestContext003_BeanDefinitions.getJdbcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__TestContext003_BeanDefinitions.DependsOnDatabaseInitializationPostProcessor.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration", JdbcClientAutoConfiguration__TestContext003_BeanDefinitions.getJdbcClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcClient", JdbcClientAutoConfiguration__TestContext003_BeanDefinitions.getJdbcClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration", ReactorAutoConfiguration__TestContext003_BeanDefinitions.getReactorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties", ReactorProperties__TestContext003_BeanDefinitions.getReactorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration", DataSourceInitializationConfiguration__TestContext003_BeanDefinitions.getDataSourceInitializationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dataSourceScriptDatabaseInitializer", DataSourceInitializationConfiguration__TestContext003_BeanDefinitions.getDataSourceScriptDatabaseInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__TestContext003_BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__TestContext003_BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration", DataSourceTransactionManagerAutoConfiguration__TestContext003_BeanDefinitions.JdbcTransactionManagerConfiguration.getJdbcTransactionManagerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration", DataSourceTransactionManagerAutoConfiguration__TestContext003_BeanDefinitions.getDataSourceTransactionManagerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration", ProxyTransactionManagementConfiguration__TestContext003_BeanDefinitions.getProxyTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionAdvisor", ProxyTransactionManagementConfiguration__TestContext003_BeanDefinitions.getInternalTransactionAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("transactionAttributeSource", ProxyTransactionManagementConfiguration__TestContext003_BeanDefinitions.getTransactionAttributeSourceBeanDefinition());
    beanFactory.registerBeanDefinition("transactionInterceptor", ProxyTransactionManagementConfiguration__TestContext003_BeanDefinitions.getTransactionInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionalEventListenerFactory", AbstractTransactionManagementConfiguration__TestContext003_BeanDefinitions.getInternalTransactionalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration", TransactionAutoConfiguration__TestContext003_BeanDefinitions.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration", TransactionAutoConfiguration__TestContext003_BeanDefinitions.EnableTransactionManagementConfiguration.getEnableTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration", TransactionAutoConfiguration__TestContext003_BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionTemplate", TransactionAutoConfiguration__TestContext003_BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration", TransactionAutoConfiguration__TestContext003_BeanDefinitions.getTransactionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__TestContext003_BeanDefinitions.TomcatWebServerFactoryCustomizerConfiguration.getTomcatWebServerFactoryCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatWebServerFactoryCustomizer", EmbeddedWebServerFactoryCustomizerAutoConfiguration__TestContext003_BeanDefinitions.TomcatWebServerFactoryCustomizerConfiguration.getTomcatWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__TestContext003_BeanDefinitions.getEmbeddedWebServerFactoryCustomizerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration", HttpEncodingAutoConfiguration__TestContext003_BeanDefinitions.getHttpEncodingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("characterEncodingFilter", HttpEncodingAutoConfiguration__TestContext003_BeanDefinitions.getCharacterEncodingFilterBeanDefinition());
    beanFactory.registerBeanDefinition("localeCharsetMappingsCustomizer", HttpEncodingAutoConfiguration__TestContext003_BeanDefinitions.getLocaleCharsetMappingsCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration", MultipartAutoConfiguration__TestContext003_BeanDefinitions.getMultipartAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("multipartConfigElement", MultipartAutoConfiguration__TestContext003_BeanDefinitions.getMultipartConfigElementBeanDefinition());
    beanFactory.registerBeanDefinition("multipartResolver", MultipartAutoConfiguration__TestContext003_BeanDefinitions.getMultipartResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties", MultipartProperties__TestContext003_BeanDefinitions.getMultipartPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration", ServletEndpointManagementContextConfiguration__TestContext003_BeanDefinitions.WebMvcServletEndpointManagementContextConfiguration.getWebMvcServletEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletEndpointRegistrar", ServletEndpointManagementContextConfiguration__TestContext003_BeanDefinitions.WebMvcServletEndpointManagementContextConfiguration.getServletEndpointRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration", ServletEndpointManagementContextConfiguration__TestContext003_BeanDefinitions.getServletEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletExposeExcludePropertyEndpointFilter", ServletEndpointManagementContextConfiguration__TestContext003_BeanDefinitions.getServletExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration", WebMvcEndpointManagementContextConfiguration__TestContext003_BeanDefinitions.getWebMvcEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointServletHandlerMapping", WebMvcEndpointManagementContextConfiguration__TestContext003_BeanDefinitions.getWebEndpointServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("controllerEndpointHandlerMapping", WebMvcEndpointManagementContextConfiguration__TestContext003_BeanDefinitions.getControllerEndpointHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("endpointObjectMapperWebMvcConfigurer", WebMvcEndpointManagementContextConfiguration__TestContext003_BeanDefinitions.getEndpointObjectMapperWebMvcConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties", CorsEndpointProperties__TestContext003_BeanDefinitions.getCorsEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration", ManagementContextAutoConfiguration__TestContext003_BeanDefinitions.SameManagementContextConfiguration.EnableSameManagementContextConfiguration.getEnableSameManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration", ManagementContextAutoConfiguration__TestContext003_BeanDefinitions.SameManagementContextConfiguration.getSameManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration", ManagementContextAutoConfiguration__TestContext003_BeanDefinitions.getManagementContextAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties", ManagementServerProperties__TestContext003_BeanDefinitions.getManagementServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.web.client.TestRestTemplate", TestRestTemplateContextCustomizer__TestContext003_BeanDefinitions.TestRestTemplateFactory.getTestRestTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.test.web.reactive.server.WebTestClient", WebTestClientContextCustomizer__TestContext003_BeanDefinitions.WebTestClientFactory.getWebTestClientBeanDefinition());
    beanFactory.registerBeanDefinition("ai.timefold.solver.spring.boot.autoconfigure.TimefoldSolverAotFactory", TimefoldSolverAotFactory__TestContext003_BeanDefinitions.getTimefoldSolverAotFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("getSolverConfig", TimefoldSolverAotFactory__TestContext003_BeanDefinitions.getGetSolverConfigBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_AWC_entityManagerFactory", SharedEntityManagerCreator__TestContext003_BeanDefinitions.getJpaSharedEMAWCentityManagerFactoryBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerAlias("applicationTaskExecutor", "taskExecutor");
  }
}
