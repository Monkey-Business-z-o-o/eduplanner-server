services:
  database:
    image: postgres:latest
    container_name: eduplanner-database-dev
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root123
      POSTGRES_DB: eduplanner_dev
    volumes:
      - ./edudb.sql:/docker-entrypoint-initdb.d/edudb.sql
      - db_data_dev:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Zmieniony port, aby nie kolidował z produkcją
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-root}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: gradle:latest
    container_name: eduplanner-backend-dev
    working_dir: /app
    volumes:
      - .:/app
      - gradle_cache:/home/gradle/.gradle
    environment:
      SPRING_PROFILES_ACTIVE: test
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root123
      POSTGRES_DB: eduplanner_dev
      DATABASE_URL: jdbc:postgresql://database:5432/eduplanner_dev
    command: ["gradle", "bootRun"]
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8081:8080" # Zmieniony port, aby nie kolidował z produkcją

volumes:
  db_data_dev:
    name: dev_db_data
  gradle_cache:
    name: dev_gradle_cache
